buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    //Remove 'com.jfrog.artifactory' plugin if you are not using Artifactory
    id 'com.jfrog.artifactory' version '4.17.2'
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
    repositories {
        jcenter()
        mavenCentral()
    }
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'zsw-libs-release-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
    }
    resolve {
        repository {
            repoKey = 'zsw-libs-release'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation fileTree(include: ['*.jar', "*.dylib", "*.so"], dir: 'libs')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'org.json', name: 'json', version: '20200518'
    //implementation 'one.block:eosiojava:1.0.0'
    implementation 'org.jetbrains:annotations:17.0.0'
    implementation 'org.zhongshuwen:zswjava:1.0.0'
}

jar {
    dependsOn 'copyNativeLibrary'
    // Copy lib file before jar is created
    from('zswjavaabieos/build/lib/main/debug') {
        include '**/*.so'
        include '**/*.dylib'
        into('zswjavaabieos/build/lib/main/debug')
    }
}

task copyNativeLibrary(type: Copy) {
    //dependsOn ':zswjavaabieos:linkDebug'
    // Copy lib to /resources so tests can run within project (outside of gradle task)
    from ('zswjavaabieos/build/lib/main/debug') {
        include '**/*.so'
        include '**/*.dylib'
    }
    into 'src/main/resources/zswjavaabieos/build/lib/main/debug'
}

test {
    dependsOn 'copyNativeLibrary'
    systemProperty "java.library.path", file("${project(":zswjavaabieos").buildDir}/lib/main/debug").absolutePath
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task gitSubmodulesUpdate {
    //exec {
    //    commandLine 'git', 'submodule', 'update', '--init', '--recursive'
    //}
}

task deleteCopiedNativeLibrary(type: Delete) {
    dependsOn('gitSubmodulesUpdate')
    delete fileTree(include: ["*.dylib", "*.so"], dir: 'src/main/resources/zswjavaabieos/build/lib/main/debug')
}

clean.dependsOn 'deleteCopiedNativeLibrary'

def libraryGroupId = 'org.zhongshuwen'
def libraryArtifactId = 'zswchain-java'
def libraryVersion = '1.0.0'

task sourcesJar(type: Jar, dependsOn: classes){
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc){
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        jar(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            groupId libraryGroupId
            version libraryVersion
            artifactId libraryArtifactId

            artifact("$buildDir/libs/${artifactId}.jar")

            pom {
                name = 'ZSWChain SDK for Java: ABIEOS Serialization Provider'
                description = 'ZSWJS Serialization Provider is intended to be used in conjunction with EOSIO SDK for Java as a provider plugin.'
                url = 'https://github.com/zhongshuwen/zswchain-java-abi'
                licenses {
                    license {
                        name = 'MIT License'
                    }
                }
                developers {
                    developer {
                        id = 'zhongshuwen'
                        name = 'zhongshuwen'
                        email = 'it@zhongshuwen.com'
                    }
                }
            }
        }
    }
}
